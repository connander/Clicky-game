{"version":3,"sources":["components/FriendCard/FriendCard.js","components/Wrapper/Wrapper.js","components/Header/Header.js","App.js","index.js"],"names":["Card","props","className","onClick","clickCount","id","alt","name","src","image","Wrapper","children","Header","score","highscore","App","state","friends","endGame","setState","forEach","card","count","find","i","j","sort","Math","random","this","map","key","React","Component","ReactDOM","render","document","getElementById"],"mappings":"6gEAUeA,G,MAPF,SAAAC,GAAK,OAChB,yBAAKC,UAAU,OAAOC,QAAS,kBAAMF,EAAMG,WAAWH,EAAMI,MAC1D,yBAAKH,UAAU,iBACb,yBAAKI,IAAKL,EAAMM,KAAMC,IAAKP,EAAMQ,Y,MCCxBC,MAJf,SAAiBT,GACf,OAAO,yBAAKC,UAAU,WAAWD,EAAMU,WCS1BC,G,MATA,SAAAX,GAAK,OAClB,yBAAKC,UAAU,UACb,yBAAKA,UAAU,SAASD,EAAMU,UAC9B,yBAAKT,UAAU,UAAf,UACUD,EAAMY,MADhB,eACmCZ,EAAMa,c,OCiD9BC,G,iNAhDbC,MAAQ,CACNC,UACAJ,MAAO,EACPC,UAAW,G,EAGbI,QAAU,WAQR,OAPI,EAAKF,MAAMH,MAAQ,EAAKG,MAAMF,WAChC,EAAKK,SAAS,CAAEL,UAAW,EAAKE,MAAMH,QAExC,EAAKG,MAAMC,QAAQG,SAAQ,SAAAC,GACzBA,EAAKC,MAAQ,KAEf,EAAKH,SAAS,CAAEN,MAAO,KAChB,G,EAGTT,WAAa,SAAAC,GACX,EAAKW,MAAMC,QAAQM,MAAK,SAACC,EAAGC,GAC1B,GAAID,EAAEnB,KAAOA,EAAI,CACf,GAAyB,IAArBY,EAAQQ,GAAGH,MAIb,OAHAL,EAAQQ,GAAGH,MAAQL,EAAQQ,GAAGH,MAAQ,EACtC,EAAKH,SAAS,CAAEN,MAAO,EAAKG,MAAMH,MAAQ,IAC1C,EAAKG,MAAMC,QAAQS,MAAK,kBAAMC,KAAKC,SAAW,OACvC,EAEP,EAAKV,e,wEAMH,IAAD,OACP,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAQL,MAAOgB,KAAKb,MAAMH,MAAOC,UAAWe,KAAKb,MAAMF,WAAvD,eACCe,KAAKb,MAAMC,QAAQa,KAAI,SAAAT,GAAI,OAC1B,kBAAC,EAAD,CACEjB,WAAY,EAAKA,WACjBC,GAAIgB,EAAKhB,GACT0B,IAAKV,EAAKhB,GACVI,MAAOY,EAAKZ,gB,GA1CNuB,IAAMC,Y,MCHxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.d58c67ce.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nconst Card = props => (\n  <div className=\"card\" onClick={() => props.clickCount(props.id)}>\n    <div className=\"img-container\">\n      <img alt={props.name} src={props.image} />\n    </div>\n  </div>\n);\nexport default Card;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","\r\nimport React from \"react\";\r\nimport \"./Header.css\";\r\n\r\nconst Header = props => (\r\n  <div className=\"header\">\r\n    <div className=\"title\">{props.children}</div>\r\n    <div className=\"scores\">\r\n      Score: {props.score} Highscore: {props.highscore}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Header;","import React from \"react\";\nimport Card from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Header from \"./components/Header\";\nimport friends from \"./friends.json\";\nimport \"./App.css\";\n\n\nclass App extends React.Component {\n  state = {\n    friends,\n    score: 0,\n    highscore: 0\n  };\n\n  endGame = () => {\n    if (this.state.score > this.state.highscore) {\n      this.setState({ highscore: this.state.score });\n    }\n    this.state.friends.forEach(card => {\n      card.count = 0;\n    });\n    this.setState({ score: 0 });\n    return true;\n  }\n\n  clickCount = id => {\n    this.state.friends.find((i, j) => {\n      if (i.id === id) {\n        if (friends[j].count === 0) {\n          friends[j].count = friends[j].count + 1;\n          this.setState({ score: this.state.score + 1 });\n          this.state.friends.sort(() => Math.random() - 0.5)\n          return true;\n        } else {\n          this.endGame();\n        }\n      }\n    });\n  }\n\n  render() {\n    return (\n      <Wrapper>\n        <Header score={this.state.score} highscore={this.state.highscore}>Clicky Game</Header>\n        {this.state.friends.map(card => (\n          <Card\n            clickCount={this.clickCount}\n            id={card.id}\n            key={card.id}\n            image={card.image} />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}